// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 示例模型
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("posts")
}

// 案例實績專案模型
model Project {
  id              String        @id @default(uuid()) // 使用 UUID
  title           String        // 專案標題（如：新北市五股區中興段777地號）
  location        String        // 專案位置/地址
  description     String        // 專案描述
  statusNote      String?       // 專案狀態說明（如：都市更新事業計畫審議會版）
  category        String        @default("都市更新") // 專案分類
  status          ProjectStatus @default(inProgress) // 專案狀態
  imageUrl        String?       // 主要圖片 URL
  landArea        String?       // 土地面積
  buildingFloors  String?       // 建築樓層（如：地上X層、地下X層）
  units           String?       // 住宅單位數
  features        String?       // 專案特色
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@map("projects")
}

// 專案狀態枚舉
enum ProjectStatus {
  inProgress // 進行中
  complete   // 完成

  @@map("project_status")
}
